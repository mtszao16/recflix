schema {
  query: Query
  mutation: Mutation
}

type Query {
  allUsers: [User]
  allUserInteractions: [UserInteraction]
  allMovies: [Movie]
  allFeedbacks: [Feedback]
}

type Mutation {
  createUser(name: String!, authProvider: AuthData!): User
  signinUser(auth: AuthData): SigninPayload
  logUserInteraction(time: String!, type: String!): UserInteraction
  addMovie(name: String!, url: String): Movie
  recordFeedback(
    rating: Int!
    type: String
    userId: String
    movieId: String
  ): Feedback
}

type User {
  id: ID!
  name: String!
  email: String
  password: String
}

type UserInteraction {
  interationTime: String!
  interactionType: String!
  interactedBy: User!
}

type Movie {
  id: ID!
  name: String!
  url: String
}

type Feedback {
  id: ID!
  rating: Int!
  type: String
  userId: String
  movieId: String
  createdAt: DateTime!
}

type SigninPayload {
  token: String
  user: User
}

input AuthData {
  email: String!
  password: String!
}

scalar DateTime